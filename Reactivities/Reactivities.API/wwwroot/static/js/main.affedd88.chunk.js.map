{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/profiles/ProfilePage/FollowButtons/index.ts","features/profiles/ProfilePage/FollowButtons/FollowButtons.tsx","features/profiles/ProfileCard/index.ts","features/profiles/ProfileCard/ProfileCard.tsx","features/activities/dashboard/ActivityAttendee/ActivityAttendee.tsx","features/activities/dashboard/ActivityList/ActivityListItem/ActivityListItem.tsx","features/activities/dashboard/ActivityList/index.ts","features/activities/dashboard/ActivityList/ActivityList.tsx","features/activities/dashboard/ActivityFilters/index.ts","features/activities/dashboard/ActivityFilters/ActivityFilters.tsx","features/activities/dashboard/ActivityList/ActivityListItemPlaceholder/ActivityListItemPlaceholder.tsx","features/activities/dashboard/index.ts","features/activities/dashboard/ActivityDashboard.tsx","app/layout/NavBar/NavBar.styled.tsx","app/layout/NavBar/index.ts","app/layout/NavBar/NavBar.tsx","app/common/form/FormTextInput/FormTextInput.tsx","app/common/form/FormTextArea/FormTextArea.tsx","app/common/form/FormSelectInput/FormSelectInput.tsx","app/common/form/FormSelectInput/SelectInputOptions/selectInputOptions.ts","app/common/form/FormDateInput/FormDateInput.tsx","features/users/LoginForm/index.ts","features/users/LoginForm/LoginForm.tsx","features/error/ValidationErrors/ValidationErrors.tsx","features/users/RegisterForm/RegisterForm.tsx","features/HomePage/index.ts","features/HomePage/HomePage.tsx","app/layout/LoadingComponent/LoadingComponent.tsx","features/activities/form/index.ts","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailsHeader/ActivityDetailsHeader.styled.tsx","features/activities/details/ActivityDetailsHeader/ActivityDetailsHeader.tsx","features/activities/details/ActivityDetailsHeader/index.ts","features/activities/details/ActivityDetailsInfo/index.ts","features/activities/details/ActivityDetailsInfo/ActivityDetailsInfo.tsx","features/activities/details/ActivityDetailsChat/index.ts","features/activities/details/ActivityDetailsChat/ActivityDetailsChat.tsx","features/activities/details/ActivityDetailsSideBar/index.ts","features/activities/details/ActivityDetailsSideBar/ActivityDetailsSideBar.tsx","features/activities/details/index.ts","features/activities/details/ActivityDetails.tsx","features/error/NotFound/NotFound.tsx","features/error/ServerError/ServerError.tsx","app/common/modals/index.ts","app/common/modals/ModalContainer.tsx","features/profiles/ProfilePage/ProfileActivities/ProfileActivities.tsx","features/profiles/ProfilePage/ProfileActivities/index.ts","features/profiles/ProfilePage/ProfileFollowings/index.ts","features/profiles/ProfilePage/ProfileFollowings/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget/PhotoUploadWidget.tsx","features/profiles/ProfilePage/ProfilePhotos/index.ts","features/profiles/ProfilePage/ProfilePhotos/ProfilePhotos.tsx","features/profiles/ProfilePage/ProfileContent/index.ts","features/profiles/ProfilePage/ProfileContent/ProfileContent.tsx","features/profiles/ProfilePage/ProfileHeader/index.ts","features/profiles/ProfilePage/ProfileHeader/ProfileHeader.tsx","features/profiles/ProfilePage/index.ts","features/profiles/ProfilePage/ProfilePage.tsx","app/layout/PrivateRoute/index.ts","app/layout/PrivateRoute/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","classCallCheck","this","assign","ActivityFormValues","activity","id","undefined","title","category","description","date","venue","city","PaginatedResult","data","pagination","PagingParams","pageNumber","arguments","length","pageSize","axios","defaults","baseURL","process","responseBody","response","interceptors","request","use","config","headers","token","store","commonStore","Authorization","concat","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_ref2","status","errors","modelStateErrors","i","push","flat","toast","history","setServerError","Promise","reject","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","currentUser","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateFollowing","followings","requestingFollowers","activities","predicate","Profile","userName","displayName","image","ActivityStore","_this","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPredicate","value","resetPredicate","forEach","key","setPagingParams","setPagination","setLoadingInitial","state","setLoading","loadActivities","result","axiosParams","sent","setActivity","t0","console","log","finish","loadActivity","_callee2","_context2","runInAction","createActivity","_ref3","_callee3","attendee","newActivity","_context3","userStore","hostUsername","attendees","_x2","updateActivity","_ref4","_callee4","_context4","updatedActivity","objectSpread","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","isGoing","some","isHost","host","find","x","Date","updateAttendance","_callee6","_context6","filter","u","cancelActivity","_callee7","_context7","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","createClass","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","toConsumableArray","URLSearchParams","toString","toISOString","ProfileStore","profile","loadingProfile","uploading","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","ph","activityStore","followingCount","_x5","_x6","loadFollowings","_ref6","_x7","loadUserActivities","_ref7","_x8","_x9","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","CommonStore","getItem","appLoaded","setAppLoaded","setItem","ModalStore","modal","open","openModal","content","profileStore","commentStore","CommentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","_useStore","react_default","createElement","Reveal","animated","Content","visible","style","width","Button","fluid","color","hidden","basic","onClick","e","preventDefault","handleFollow","Card","as","Link","to","Image","src","Header","Description","extra","Icon","name","ProfilePage_FollowButtons","ActivityAttendee","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","Item","size","circular","bordered","profiles_ProfileCard","ActivityListItem","_useState","useState","_useState2","slicedToArray","SegmentGroup","Segment","Label","attached","textAlign","ItemGroup","ItemImage","marginBottom","ItemContent","ItemDescription","react_router_dom","secondary","clearing","floated","groupedActivities","Fragment","group","react","sub","_useStore$activitySto","Menu","vertical","marginTop","icon","active","has","esm","onChange","ActivityListItemPlaceholder","Placeholder","Group","minHeight","Line","Paragraph","disabled","loadActivties","loadingNext","setLoadingNext","useEffect","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","dashboard_ActivityList","dashboard_ActivityFilters","Loader","StyledImage","styled","_templateObject","taggedTemplateLiteral","inverted","fixed","Container","NavLink","exact","header","alt","positive","position","avatar","spaced","right","Dropdown","pointing","text","FormTextInput","props","_useField","useField","_useField2","field","meta","Form","Field","touched","label","FormTextArea","FormSelectInput","helpers","Select","options","clearable","event","setValue","onBlur","setTouched","placeholder","categoryOptions","FormDateInput","react_datepicker_min_default","selected","formik_esm","initialValues","password","email","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","text-align","type","render","ValidationErrors","marginLeft","err","RegisterForm","validationSchema","Yup","required","isValid","dirty","isLoggedIn","users_LoginForm","LoadingComponent","_ref$inverted","_ref$content","Dimmer","inline","useHistory","useParams","requiredError","nullable","fieldName","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","WhiteParagraph","ActivityDetailsHeader_styled_templateObject","WhiteHeader","h2","_templateObject2","_templateObject3","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","ActivityDetailsHeader_styled_StyledImage","verticalAlign","border","Comment","resetForm","onKeyPress","shiftKey","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","divided","Extra","details_ActivityDetailsHeader","details_ActivityDetailsInfo","details_ActivityDetailsChat","ActivityDetailsSideBar","NotFound","Inline","primary","ServerError","message","stackTrace","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","_useStore$profileStor","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","ProfilePage_ProfilePhotos","ProfilePage_ProfileActivities","ProfilePage_ProfileFollowings","menuPosition","Statistic","Divider","ProfilePage_ProfileHeader","ProfilePage_ProfileContent","Component","component","rest","objectWithoutProperties","react_router","location","useLocation","finally","react_toastify_esm","hideProgressBar","modals","path","HomePage","layout_NavBar","layout_PrivateRoute","ActivityDashboard","ProfilePage","ActivityForm","ActivityDetails","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","d","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","Provider","layout_App","document","getElementById"],"mappings":"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","file":"static/js/main.affedd88.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    title: string;\r\n    category: string;\r\n    description: string;\r\n    city: string;\r\n    venue: string;\r\n    date: Date;\r\n    id: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    attendees: Profile[];\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues){\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n   id?: string = undefined;\r\n   title: string = '';\r\n   category: string = '';\r\n   description: string = '';\r\n   date: Date | null = null;\r\n   venue: string = '';\r\n   city: string = '';\r\n\r\n   constructor(activity?: ActivityFormValues){\r\n        if(activity){\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n   }\r\n}","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n\r\n    constructor(pageNumber: number = 1, pageSize: number = 2){\r\n        this.pageNumber = pageNumber, this.pageSize = pageSize;\r\n    }\r\n}","import { Activity, CommonError, User, LoginUser, RegisterUser, ActivityFormValues } from '../models';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { store } from '../../app/stores';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { request } from 'http';\r\n\r\nfunction sleep(delay: number) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    if (config.headers === undefined) config.headers = {};\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV === 'development')  await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n\r\n    if(pagination){\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    \r\n    return response;\r\n},\r\n    (error: AxiosError<CommonError>) => {\r\n        const { data, status } = error.response!;\r\n        switch (status) {\r\n            case 400:\r\n                if (data.errors) {\r\n                    const modelStateErrors = [];\r\n                    for (const i in data.errors) {\r\n                        if (data.errors[i]) {\r\n                            modelStateErrors.push(data.errors[i]);\r\n                        }\r\n                    }\r\n                    throw modelStateErrors.flat();\r\n                }\r\n                toast.error(data);\r\n                break;\r\n            case 401:\r\n                toast.error(\"Unauthorized\");\r\n                break;\r\n            case 404:\r\n                history.push(\"/not-found\")\r\n                break;\r\n            case 500:\r\n                store.commonStore.setServerError(data);\r\n                history.push('/server-error');\r\n                break;\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    })\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    currentUser: () => requests.get<User>('/account'),\r\n    login: (user: LoginUser) => requests.post<User>('/account/login', user),\r\n    register: (user: RegisterUser) => requests.post<User>('/account/register', user)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    followings: (username: string, requestingFollowers: boolean) => \r\n        requests.get<Profile[]>(`/follow/${username}?requestingFollowers=${requestingFollowers}`),\r\n    activities: (username: string, predicate: string) => \r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n}\r\n\r\nexport const agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles,\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    userName: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos: Photo[];\r\n}          \r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User){\r\n        this.userName = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string,\r\n    title: string,\r\n    date: Date,\r\n    hostUsername: string;\r\n    category: string;\r\n}","import { Activity, ActivityFormValues } from \"../models\";\r\nimport { agent } from \"../../app/api\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { format } from 'date-fns'\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport class ActivityStore {\r\n    activities = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activities.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activities.values()).sort((a, b) =>\r\n            a.date.getTime() - b.date.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date, 'dd/MMM/yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as { [key: string]: Activity[] })\r\n        )\r\n    }\r\n\r\n    get axiosParams(){\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === \"startDate\"){\r\n                params.append(key, (value as Date).toISOString());\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        \r\n        return params;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if(key != 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch(predicate){\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    setPagingParams = (params: PagingParams) => this.pagingParams = params; \r\n\r\n    setPagination = (pagination: Pagination) => this.pagination = pagination;\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    setLoading = (state: boolean) => {\r\n        this.loading = state;\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.setLoadingInitial(true);\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            });\r\n            \r\n            this.setPagination(result.pagination);\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.activities.get(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.setLoadingInitial(true);\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                });\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            } finally {\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if(activity.id){\r\n                    let updatedActivity = {...this.activities.get(activity.id), ...activity}\r\n                    this.activities.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.setLoading(true);\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activities.delete(id);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n\r\n        if(user){\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.userName === user.username\r\n            );\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees!.find(\r\n                x => x.userName === activity.hostUsername\r\n            );\r\n        }\r\n        \r\n        activity.date = new Date(activity.date)\r\n        this.activities.set(activity.id, activity);\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if(this.selectedActivity!.isGoing) {\r\n                    this.selectedActivity!.attendees = this.selectedActivity!.attendees!.filter(u => u.userName !== user!.username);\r\n                    this.selectedActivity!.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity!.attendees!.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activities.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error){\r\n            console.log(error);\r\n        } finally {\r\n            console.log(this.selectedActivity);\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    cancelActivity = async () => {\r\n        this.loading = true;\r\n        try {   \r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity!.isCancelled;\r\n                this.activities.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch(error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => this.selectedActivity = undefined;\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activities.forEach((activity) => {\r\n            activity.attendees.forEach((attendee) => {\r\n                if(attendee.userName === username){\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { agent } from \"../api\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore{\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n    \r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if(activeTab === 3 || activeTab === 4){\r\n                    const requestingFollowers = activeTab === 3 ? true : false;\r\n                    this.loadFollowings(requestingFollowers);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n    )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser(){\r\n        if(store.userStore.user && this.profile){\r\n            return store.userStore.user.username === this.profile.userName;\r\n        }\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try{\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => this.profile = profile)\r\n        } catch(error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    } \r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if(this.profile){\r\n                    this.profile.photos.push(photo);\r\n                    if(photo.isMain && store.userStore.user){\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n            });\r\n        } catch(error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try{ \r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if(this.profile && this.profile.photos){\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                }\r\n            })\r\n        } catch (error){\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try{\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if(this.profile && this.profile.photos){\r\n                    this.profile.photos = this.profile.photos.filter( ph => ph.id !== photo.id);\r\n                }\r\n            })\r\n        } catch(error){\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async(username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try{\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if(this.profile && this.profile.userName !== store.userStore.user!.username && this.profile.userName === username){\r\n                    following ? this.profile.followersCount ++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if(this.profile && this.profile!.userName === store.userStore.user!.username){\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--; \r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if(profile.userName === username){\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n            })\r\n        } catch(error){\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    loadFollowings =  async(requestingFollowers: boolean) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.followings(this.profile!.userName, requestingFollowers);\r\n            runInAction(() => this.followings = followings);\r\n        } catch (error){\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async(username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try{\r\n            var activities = await agent.Profiles.activities(username, predicate!);\r\n            runInAction(() => this.userActivities = activities);\r\n        } catch(error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingActivities = false);\r\n        }\r\n    }\r\n}","import { User, LoginUser, RegisterUser } from '../models'\r\nimport { makeAutoObservable, runInAction } from 'mobx'\r\nimport { history } from '../..';\r\nimport { agent } from '../api/agent'\r\nimport { store } from './store';\r\nexport class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user\r\n    }\r\n\r\n    login = async (creds: LoginUser) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error\r\n        }\r\n    }\r\n\r\n    register = async (creds: RegisterUser) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt')\r\n        this.user = null;\r\n        history.push('/')\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.currentUser();\r\n            runInAction(() => this.user = user);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if(this.user){\r\n            this.user.image = image;\r\n        }       \r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport { ActivityStore } from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport { CommonStore } from \"./commonStore\";\r\nimport { ModalStore } from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport { UserStore } from \"./userStore\";\r\n\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore(),\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}\r\n","import { ServerError } from \"@models\";\r\nimport { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nexport class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n            }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => this.token = token; \r\n\r\n    setAppLoaded = () => this.appLoaded = true;\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null,\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () =>  store.userStore.user ? store.userStore.user.token : ''\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection: ' + error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => comment.createdAt = new Date(comment.createdAt));\r\n                    this.comments = comments\r\n                });\r\n            });\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => this.hubConnection!.stop().catch(error => console.log('Error stopping connection' + error));\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async(values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity!.id;\r\n        console.log(values.activityId);\r\n        try {\r\n            await this.hubConnection!.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { FollowButtons } from \"./FollowButtons\";\r\n\r\nexport default observer(FollowButtons);","import React, { SyntheticEvent } from 'react';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../../../app/models/profile';\r\nimport { useStore } from '../../../../app/stores';\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport function FollowButtons({profile}: Props){\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user!.username === profile.userName) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string){\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true) \r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{width: '100%'}}>\r\n                <Button \r\n                    fluid  \r\n                    color='teal' \r\n                    content={profile.following ? 'Following' : 'Not Following'}/>\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{width: '100%'}}>\r\n                <Button \r\n                    fluid \r\n                    color={profile.following ? 'red' : 'green'} \r\n                    basic \r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.userName)}\r\n                    />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport { ProfileCard } from \"./ProfileCard\"\r\n\r\nexport default observer(ProfileCard);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport FollowButtons from '../ProfilePage/FollowButtons';\r\n\r\ninterface Props{\r\n    profile: Profile\r\n}\r\n\r\nexport function ProfileCard({profile}: Props){\r\n    return (\r\n        <Card as={Link} to={`profiles/${profile.userName}`}>\r\n            <Image src={profile.image || '/assets/user.png'}/>\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>\r\n                Bio here\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name=\"user\"/>\r\n                {profile.followersCount} Followers\r\n            </Card.Content>\r\n            <FollowButtons profile={profile}/>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../../app/models/profile';\r\nimport ProfileCard from '../../../profiles/ProfileCard';\r\n\r\ninterface ActivityAttendeeProps{\r\n    attendees: Profile[];\r\n}\r\n\r\nexport function ActivityAttendee({ attendees }: ActivityAttendeeProps) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3,\r\n    }\r\n\r\n    return (\r\n      <List horizontal>\r\n            {attendees.map((attendee) => (\r\n                <Popup \r\n                    hoverable\r\n                    key={attendee.userName}\r\n                    trigger={\r\n                        <List.Item key={attendee.userName} as={Link} to={`/profiles/${attendee.userName}`}>\r\n                            <Image \r\n                                size=\"mini\" \r\n                                circular \r\n                                src={attendee.image || \"/assets/user.png\"}\r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }>\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee!}/> \r\n                    </Popup.Content>\r\n                </Popup>\r\n        ))}\r\n      </List>\r\n    );\r\n}","import React from \"react\";\r\nimport { Activity } from \"@models\";\r\nimport { useStore } from \"../../../../../app/stores\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Item,\r\n  ItemContent,\r\n  ItemDescription,\r\n  ItemGroup,\r\n  ItemImage,\r\n  Label,\r\n  Segment,\r\n  SegmentGroup,\r\n} from \"semantic-ui-react\";\r\nimport { format } from \"date-fns\";\r\nimport { ActivityAttendee } from \"../../ActivityAttendee/ActivityAttendee\";\r\n\r\ninterface ActivityListItemProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: ActivityListItemProps) {\r\n  const { activityStore } = useStore();\r\n  const { deleteActivity } = activityStore;\r\n\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handleActivityDelete(\r\n    e: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deleteActivity(id);\r\n  }\r\n\r\n  return (\r\n    <SegmentGroup>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}}/>\r\n        )}\r\n        <ItemGroup>\r\n          <Item>\r\n            <ItemImage size=\"tiny\" circular src={(activity.host && activity.host.image) || \"/assets/user.png\"} style={{marginBottom: 3}}/>\r\n            <ItemContent>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              {activity.host &&\r\n                <ItemDescription>\r\n                  Hosted by <Link to={`/profiles/${activity.host.userName}`}>{activity.host.displayName} </Link>\r\n                </ItemDescription>\r\n              }\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </ItemContent>\r\n          </Item>\r\n        </ItemGroup>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date, \"dd/MM/yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        {activity.attendees && (\r\n          <ActivityAttendee attendees={activity.attendees} />\r\n        )}\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </SegmentGroup>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { ActivityList } from './ActivityList'\r\n\r\nexport default observer(ActivityList);","import React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores\";\r\nimport { ActivityListItem } from \"./ActivityListItem\";\r\n\r\nexport function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { ActivityFilters } from \"./ActivityFilters\";\r\n\r\nexport default observer(ActivityFilters);","import React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores\";\r\n\r\nexport function ActivityFilters() {\r\n  const {activityStore: {predicate, setPredicate} } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 35 }}>\r\n        <Header attached icon=\"filter\" color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item \r\n          content=\"All Activities\"\r\n          active={predicate.has('all')} \r\n          onClick={() => setPredicate('all', 'true')}\r\n        />\r\n        <Menu.Item \r\n          content=\"I'm going\"\r\n          active={predicate.has('isGoing')} \r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n        />\r\n        <Menu.Item \r\n          content=\"I'm hosting\"\r\n          active={predicate.has('isHost')} \r\n          onClick={() => setPredicate('isHost', 'true')}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar \r\n        onChange={(date: Date) => setPredicate('startDate', date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n\r\n        />\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { ActivityDashboard } from \"./ActivityDashboard\"\r\n\r\nexport default observer(ActivityDashboard) ","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { useStore } from \"../../../app/stores\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { ActivityListItem } from \"./ActivityList/ActivityListItem\";\r\nimport { ActivityListItemPlaceholder } from \"./ActivityList/ActivityListItemPlaceholder\";\r\n\r\n\r\nexport function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities: loadActivties, activities, setPagingParams, pagination } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activities.size <= 1) loadActivties();\r\n  }, [activityStore]);\r\n\r\n  function handleLoadingNext(){\r\n      setLoadingNext(true);\r\n      setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n      loadActivties().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <InfiniteScroll \r\n              pageStart={0}\r\n              loadMore={handleLoadingNext}\r\n              hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n              initialLoad={false}\r\n            >\r\n              <ActivityList />\r\n            </InfiniteScroll>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={4}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      \r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { Image } from 'semantic-ui-react'\r\n\r\nexport const StyledImage = styled(Image)`\r\n    margin-right: 10px;\r\n    height: 35px;\r\n`;","import { observer } from \"mobx-react-lite\";\r\nimport { NavBar } from \"./NavBar\";\r\n\r\nexport default observer(NavBar);","import React from \"react\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { StyledImage } from \"./NavBar.styled\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useStore } from \"../../stores\";\r\n\r\nexport function NavBar() {\r\n  const { userStore } = useStore();\r\n  const { user, logout } = userStore;\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item  as={NavLink} to=\"/\" exact header>\r\n          <StyledImage src=\"/assets/logo.png\" alt=\"logo\" />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          color='violet'\r\n          as={NavLink}\r\n          to=\"/activities\"\r\n          name=\"Activities\"\r\n        />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          ></Button>\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            {user.image ? (\r\n              <Image src={user.image} avatar spaced right=\"true\" />\r\n            ) : (\r\n              <Image src=\"/assets/user.png\" avatar spaced right=\"true\" />\r\n            )}\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profiles/${user.username}`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n","import { Form, Label } from \"semantic-ui-react\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface FormTextInputProps {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n  autoComplete?: string;\r\n}\r\n\r\nexport function FormTextInput(props: FormTextInputProps) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props}></input>\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\" content={meta.error} />\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { Form, Label } from \"semantic-ui-react\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface FormTextAreaProps {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport function FormTextArea(props: FormTextAreaProps) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props}></textarea>\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\" content={meta.error} />\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { Form, Label, Select } from \"semantic-ui-react\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface FormSelectInputProps {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport function FormSelectInput(props: FormSelectInputProps) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        options={props.options}\r\n        clearable\r\n        value={field.value || null}\r\n        onChange={(event, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\" content={meta.error} />\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    { text: 'Drinks', value: 'drinks' },\r\n    { text: 'Culture', value: 'culture' },\r\n    { text: 'Film', value: 'film' },\r\n    { text: 'Food', value: 'food' },\r\n    { text: 'Music', value: 'music' },\r\n    { text: 'Travel', value: 'Travel' },\r\n]","import React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { useField } from \"formik\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport function FormDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\" content={meta.error} />\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { LoginForm } from \"./LoginForm\";\r\n\r\nexport default observer(LoginForm)\r\n","import React from \"react\";\r\nimport { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { FormTextInput } from \"../../../app/common/form\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores\";\r\nimport { ValidationError } from \"yup\";\r\n\r\nexport function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ password: \"\", email: \"\", error: \"\" }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error: ValidationError) => setErrors({error: 'Invalid email or password'}))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as='h2' content='Login to Reactivities' color='teal' text-align='center'/>\r\n          <FormTextInput\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            autoComplete=\"username\"\r\n          />\r\n          <FormTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <ErrorMessage \r\n                        name='error' render={() => \r\n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n                    />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          ></Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <>\r\n      <h3 style={{marginLeft: 20}}>Validations errors occured:</h3>\r\n      {errors && (\r\n        <ul >\r\n          {errors.map((err: any, i: any) => (\r\n            <li key={i}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { FormTextInput } from \"../../../app/common/form\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores\";\r\nimport * as Yup from 'yup';\r\nimport { ValidationErrors } from \"../../error/ValidationErrors\";\r\n\r\nexport function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: \"\",\r\n        email: \"\",\r\n        displayName: \"\",\r\n        username: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            text-align=\"center\"\r\n          />\r\n          <FormTextInput\r\n            name=\"displayName\"\r\n            placeholder=\"Display name\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <FormTextInput\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <FormTextInput name=\"email\" placeholder=\"Email\" autoComplete=\"off\" />\r\n          <FormTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          ></Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { HomePage } from \"./HomePage\";\r\n\r\nexport default observer(HomePage)","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport { RegisterForm } from \"../users/RegisterForm/RegisterForm\";\r\n\r\nexport function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted vertical textAlign=\"center\" className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h2\" inverted>\r\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header inverted as=\"h2\" content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n            <>\r\n          <Button onClick={() => modalStore.openModal(<LoginForm/>)} to=\"/login\" size=\"huge\" inverted>\r\n            Login!\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm/>)} to=\"/register\" size=\"huge\" inverted>\r\n            Register!\r\n          </Button>\r\n            </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Button, Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface LoadingComponentProps {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport function LoadingComponent({ inverted = true, content = 'Loading...' }: LoadingComponentProps) {\r\n    return (\r\n        <Dimmer inverted={inverted} active>\r\n            <Loader content={content} active className='workaround' size='large' inline='centered' />\r\n      </Dimmer>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { ActivityForm } from \"./ActivityForm\";\r\n\r\nexport default observer(ActivityForm);","import { ActivityFormValues } from \"../../../app/models\";\r\nimport { useStore } from \"../../../app/stores\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  FormDateInput,\r\n  FormTextArea,\r\n  FormTextInput,\r\n} from \"../../../app/common/form\";\r\nimport { FormSelectInput, categoryOptions } from \"../../../app/common/form\";\r\n\r\nexport function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(requiredError(\"title\")),\r\n    description: Yup.string().required(requiredError(\"description\")),\r\n    category: Yup.string().required(requiredError(\"category\")),\r\n    date: Yup.date().required(requiredError(\"date\")).nullable(),\r\n    venue: Yup.string().required(requiredError(\"venue\")),\r\n    city: Yup.string().required(requiredError(\"city\")),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => {\r\n        console.log(activity);\r\n        history.push(`/activities/${newActivity.id}`);\r\n      }\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  function requiredError(fieldName: string) {\r\n    return `The activity ${fieldName} is required`;\r\n  }\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <FormTextInput placeholder=\"Title\" name=\"title\" />\r\n            <FormTextArea\r\n              rows={3}\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n            />\r\n            <FormSelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <FormDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <FormTextInput placeholder=\"City\" name=\"city\" />\r\n            <FormTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nexport const WhiteParagraph = styled.p`\r\n  color: white;\r\n`;\r\n\r\nexport const WhiteHeader = styled.h2`\r\n  color: white;\r\n`;\r\n\r\nexport const StyledImage = styled(Image)`\r\n  filter: brightness(40%);\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\nimport {\r\n  StyledImage,\r\n  WhiteHeader,\r\n  WhiteParagraph,\r\n} from \"./ActivityDetailsHeader.styled\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../../app/stores\";\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n};\r\n\r\ninterface ActivityDetailsHeaderProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport function ActivityDetailsHeader({ activity}: ActivityDetailsHeaderProps) {\r\n  const {activityStore: {updateAttendance, cancelActivity, loading}} = useStore();\r\n\r\n  if(!activity.attendees) {console.log('return');return <></> }\r\n  if(!activity.host) return <></> \r\n  return (\r\n      <Segment.Group>\r\n        <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n          {activity.isCancelled && (\r\n            <Label style={{position: 'absolute', zIndex: 1000, left:-14, top:20}} ribbon color='red' content='Cancelled'></Label>\r\n          )}\r\n          <StyledImage\r\n            src={`/assets/categoryImages/${activity.category}.jpg`}\r\n            fluid\r\n          />\r\n          <Segment style={activityImageTextStyle} basic>\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Content>\r\n                  <WhiteHeader>{activity.title}</WhiteHeader>\r\n                  <WhiteParagraph>\r\n                    {format(activity.date, \"dd/MM/yyyy\")}\r\n                  </WhiteParagraph>\r\n                  <WhiteParagraph>\r\n                    Hosted by <strong><Link to={`/profiles/${activity.host.userName}`}>{activity.host.displayName}</Link></strong>\r\n                  </WhiteParagraph>\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Segment>\r\n        </Segment>\r\n        <Segment clearing attached=\"bottom\">\r\n          {activity.isHost ? (\r\n          <> \r\n          <Button color={activity.isCancelled ? 'green' : 'red'}\r\n            floated='left'\r\n            basic\r\n            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n            onClick={cancelActivity}\r\n            loading={loading}\r\n          />\r\n          <Button\r\n          disabled={activity.isCancelled}\r\n          as={Link}\r\n          to={`/manage/${activity.id}`}\r\n          color=\"orange\"\r\n          floated=\"right\"\r\n          content=\"Manage Event\"\r\n        /></>\r\n         ) : (activity.isGoing ? (\r\n            <Button disabled={loading} loading={loading} onClick={updateAttendance} content=\"Cancel attendance\" />\r\n          ) : (\r\n            <Button disabled={loading || activity.isCancelled} loading={loading} onClick={updateAttendance} color=\"teal\" content=\"Join activity\" />\r\n          ))}\r\n          \r\n        </Segment>\r\n      </Segment.Group>\r\n    );\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { ActivityDetailsHeader } from \"./ActivityDetailsHeader\"\r\n\r\nexport default observer(ActivityDetailsHeader);","import { observer } from 'mobx-react-lite';\r\nimport { ActivityDetailsInfo } from './ActivityDetailsInfo';\r\n\r\nexport default observer(ActivityDetailsInfo);","import React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface ActivityDetailsInfoProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport function ActivityDetailsInfo({ activity }: ActivityDetailsInfoProps) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date, \"dd/MM/yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { ActivityDetailsChat } from './ActivityDetailsChat';\r\n\r\nexport default observer(ActivityDetailsChat);","import { Formik, Form, setNestedObjectValues, Field, FieldProps} from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\r\nimport { FormTextArea } from \"../../../../app/common/form\";\r\nimport { useStore } from \"../../../../app/stores\";\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props{\r\n  activityId: string;\r\n}\r\n\r\nexport function ActivityDetailsChat({activityId}: Props) {\r\n  const {commentStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    if(activityId){\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    }\r\n  }, [commentStore, activityId])\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Comment.Group>\r\n        <Formik\r\n            onSubmit={(values, {resetForm}) => commentStore.addComment(values).then(() => resetForm())}\r\n            initialValues={{body: ''}}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required()\r\n            })}\r\n          >\r\n            {({isSubmitting, isValid, handleSubmit}) => <Form className='ui form'>\r\n            <Field name='body'>\r\n            {(props: FieldProps) => (\r\n                <div style={{position: 'relative'}}>\r\n                  <Loader active={isSubmitting} />\r\n                  <textarea \r\n                    placeholder='Enter your comment (\"Enter\" to submit \"Enter\" + \"SHIFT\" to new line)'\r\n                    rows={2}\r\n                    {...props.field}\r\n                    onKeyPress={e => {\r\n                      if(e.key === \"Enter\" && !e.shiftKey){\r\n                        e.preventDefault();\r\n                        isValid && handleSubmit();\r\n                      }\r\n                    }}\r\n                    />\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </Form>}\r\n          </Formik>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n           </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { ActivityDetailsSidebar } from './ActivityDetailsSideBar';\r\n\r\nexport default observer(ActivityDetailsSidebar);","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\ninterface Props{\r\n  activity: Activity;\r\n}\r\n\r\nexport function ActivityDetailsSidebar({activity}: Props) {\r\n  const {attendees, host} = activity;\r\n\r\n  if(!attendees || !host){\r\n    return null;\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      > \r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item key={attendee.userName} style={{ position: \"relative\" }}>\r\n              {attendee.userName === host.userName &&\r\n                 <Label\r\n                   style={{ position: \"absolute\" }}\r\n                   color=\"orange\"\r\n                   ribbon=\"right\"\r\n                 >\r\n                   Host\r\n                 </Label>\r\n              }\r\n                 <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n                 <Item.Content verticalAlign=\"middle\">\r\n                   <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.userName}`}>{attendee.displayName}</Link>\r\n                   </Item.Header>\r\n                   {attendee.following && (\r\n                    <Item.Extra style={{ color: \"orange\" }}>\r\n                    Following\r\n                  </Item.Extra>\r\n                   )}\r\n                   \r\n                 </Item.Content>\r\n               </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { ActivityDetails } from './ActivityDetails';\r\n\r\nexport default observer(ActivityDetails);","import { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ActivityDetailsHeader from \"./ActivityDetailsHeader\";\r\nimport ActivityDetailsInfo from \"./ActivityDetailsInfo\";\r\nimport ActivityDetailsChat from \"./ActivityDetailsChat\";\r\nimport ActivityDetailsSidebar from \"./ActivityDetailsSideBar\";\r\n\r\nexport function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n\r\n    return (() => clearSelectedActivity())\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailsHeader activity={activity} />\r\n        <ActivityDetailsInfo activity={activity} />\r\n        <ActivityDetailsChat activityId={activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailsSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops we've looked everywhere and could not find this...\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button\r\n          as={Link}\r\n          to=\"/activities\"\r\n          primary\r\n          content=\"Return to activities page\"\r\n        />\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { useStore } from \"../../../app/stores\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  if (!commonStore.error) return <div>...</div>;\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error.message} />\r\n      {commonStore.error.stackTrace && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\" />\r\n          <code className='code' style={{ marginTop: \"10px\" }}>\r\n            {commonStore.error.stackTrace}\r\n          </code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { ModalContainer } from \"./ModalContainer\";\r\n\r\nexport default observer(ModalContainer);","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores';\r\n\r\nexport function ModalContainer() {\r\n    const { modalStore } = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content> \r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.userName);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.userName, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n};","import { observer } from \"mobx-react-lite\";\r\nimport { ProfileActivities }from \"./ProfileActivities\";\r\n\r\nexport default observer(ProfileActivities);","import { observer } from \"mobx-react-lite\";\r\nimport { ProfileFollowings } from \"./ProfileFollowings\";\r\n\r\nexport default observer(ProfileFollowings);","import React from \"react\";\r\nimport { Card, Grid,  Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores\";\r\nimport ProfileCard from \"../../ProfileCard\";\r\n\r\nexport function ProfileFollowings(){\r\n    const {profileStore} = useStore();\r\n    const {profile, followings,  loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header \r\n                        floated='left' \r\n                        icon='user' \r\n                        content={activeTab === 3 ? `People following ${profile!.displayName}` : `People ${profile!.displayName} is following`}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map((profile) => (\r\n                            <ProfileCard key={profile.userName} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n}","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport function PhotoWidgetCropper({imagePreview, setCropper}: Props){\r\n    return (\r\n        <Cropper \r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={(cropper) => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\nexport function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: 5,\r\n        paddingTop: 30,\r\n        textAlign: 'center' as 'center',\r\n        height: 200,\r\n    };\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    };\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n        preview: URL.createObjectURL(file),\r\n    })));\r\n  }, [setFiles])\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzActive, ...dzStyles} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header, Image } from 'semantic-ui-react';\r\nimport { PhotoWidgetCropper } from '../PhotoWidgetCropper';\r\nimport { PhotoWidgetDropzone } from '../PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\nexport function PhotoUploadWidget({loading, uploadPhoto}: Props){\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>()\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n        }\r\n    }, [files])\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview and upload'/>\r\n                {files && files.length > 0 && (\r\n                    <>\r\n                        <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                        <Button.Group widths={2}>\r\n                            <Button onClick={onCrop} positive loading={loading} icon='check'/>\r\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                        </Button.Group>\r\n                    </>\r\n                )}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { ProfilePhotos } from \"./ProfilePhotos\";\r\n\r\nexport default observer(ProfilePhotos);","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, GridColumn, Header, Image, Tab } from 'semantic-ui-react';\r\nimport { PhotoUploadWidget } from '../../../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../../../app/models/profile';\r\nimport { useStore } from '../../../../app/stores';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport function ProfilePhotos({profile}: Props){\r\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file: Blob){\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos'/>\r\n                    {isCurrentUser && (\r\n                        <Button \r\n                        floated='right' \r\n                        basic \r\n                        content={addPhotoMode ? 'Cancel' : 'Add photo'}\r\n                        onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n                    :   (\r\n                            <Card.Group itemsPerRow={5}>\r\n                            {profile.photos && profile.photos.map((photo) => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url}/>\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group fluid widths={2}>\r\n                                            <Button \r\n                                                basic \r\n                                                color='green' \r\n                                                content='Main' \r\n                                                name={'main' + photo.id}\r\n                                                disabled={photo.isMain}\r\n                                                loading={target === 'main' + photo.id && loading}\r\n                                                onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                                            />\r\n                                            <Button \r\n                                                basic\r\n                                                color='red'\r\n                                                icon='trash' \r\n                                                loading={target === photo.id && loading}\r\n                                                onClick={(e) => handleDeletePhoto(photo, e)}\r\n                                                name={photo.id}\r\n                                                disabled={photo.isMain}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))}\r\n                            </Card.Group>\r\n                        )}\r\n                </Grid.Column>\r\n            </Grid>\r\n            \r\n            \r\n        </Tab.Pane>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { ProfileContent } from \"./ProfileContent\";\r\n\r\nexport default observer(ProfileContent);","import React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../../../app/models/profile';\r\nimport { useStore } from '../../../../app/stores';\r\nimport ProfileActiities from '../ProfileActivities';\r\nimport ProfileFollowings from '../ProfileFollowings';\r\nimport ProfilePhotos from '../ProfilePhotos';\r\n\r\nexport interface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport function ProfileContent({profile}: Props){\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane>},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n        {menuItem: 'Events', render: () => <ProfileActiities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings/>},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings/>},\r\n    ];\r\n\r\n    return (\r\n        <Tab \r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport { ProfileHeader } from \"./ProfileHeader\"\r\n\r\nexport default observer(ProfileHeader);","import React from 'react';\r\nimport { Button, Divider, Grid, Header, Item, Reveal, RevealContent, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../../../app/models/profile';\r\nimport FollowButtons from '../FollowButtons';\r\n\r\nexport interface Props{\r\n    profile: Profile;\r\n}\r\n\r\nexport function ProfileHeader({profile}: Props){\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as=\"h1\" content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group width={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                <FollowButtons profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { ProfilePage } from \"./ProfilePage\";\r\n\r\nexport default observer(ProfilePage);","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { LoadingComponent } from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport function ProfilePage(){\r\n    const { username } = useParams<{username: string}>();\r\n    const { profileStore } = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n    \r\n    useEffect(() => {\r\n        loadProfile(username);\r\n\r\n        return () => setActiveTab(0);\r\n    },[loadProfile, username])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Loading profile...'/>\r\n\r\n    return ( \r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile && \r\n                    <>\r\n                        <ProfileHeader profile={profile}/>\r\n                        <ProfileContent profile={profile}/>\r\n                    </>\r\n                }\r\n                \r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport default observer(PrivateRoute);","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useStore } from '../../stores';\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>\r\n}\r\n\r\nexport function PrivateRoute({component: Component, ...rest}: Props){\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />} \r\n        />\r\n    )\r\n}","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport ActivityDashboard from \"../../features/activities/dashboard\";\nimport NavBar from \"./NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/HomePage\";\nimport ActivityForm from \"../../features/activities/form\";\nimport ActivityDetails from \"../../features/activities/details\";\nimport { ToastContainer } from \"react-toastify\";\nimport { NotFound } from \"../../features/error/NotFound\";\nimport ServerError from \"../../features/error/ServerError/ServerError\";\nimport LoginForm from \"../../features/users/LoginForm\";\nimport { useStore } from \"../stores\";\nimport { LoadingComponent } from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, []);\n  \n  if (!commonStore.appLoaded) {\n    return <LoadingComponent content=\"Loading app...\"/>  \n  }\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer/>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport function ScrollToTop(){\r\n    const {pathname } = useLocation();\r\n\r\n    useEffect(() =>{\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"fomantic-ui/dist/semantic.min.css\";\nimport \"./app/layout/styles.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { ScrollToTop } from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}